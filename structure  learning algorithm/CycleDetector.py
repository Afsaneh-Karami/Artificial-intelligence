import networkx as nx


def has_cycles(edges):
    G = nx.DiGraph(edges)

    cycles = False
    for cycle in nx.simple_cycles(G):
        node_del=cycle[-1]
        for node in edges:
            if node[0]==node_del and node[1]==cycle[-1]:
                edges.remove(node)
                return(has_cycles(edges))
    print(len(edges))
    print(edges)
    if cycles is False:
        print("No cycles found!")
    return cycles


G1 = [('stroke', 'age'), ('stroke', 'hypertension'), ('stroke', 'heart_disease'), ('stroke', 'ever_married'), ('stroke', 'work_type'), ('stroke', 'avg_glucose_level'), ('stroke', 'bmi'), ('stroke', 'smoking_status'), ('gender', 'age'), ('gender', 'heart_disease'), ('gender', 'work_type'), ('gender', 'avg_glucose_level'), ('gender', 'bmi'), ('gender', 'smoking_status'), ('age', 'gender'), ('age', 'hypertension'), ('age', 'heart_disease'), ('age', 'ever_married'), ('age', 'work_type'), ('age', 'avg_glucose_level'), ('age', 'bmi'), ('age', 'smoking_status'), ('age', 'stroke'), ('hypertension', 'age'), ('hypertension', 'heart_disease'), ('hypertension', 'ever_married'), ('hypertension', 'work_type'), ('hypertension', 'avg_glucose_level'), ('hypertension', 'bmi'), ('hypertension', 'smoking_status'), ('hypertension', 'stroke'), ('heart_disease', 'gender'), ('heart_disease', 'age'), ('heart_disease', 'hypertension'), ('heart_disease', 'ever_married'), ('heart_disease', 'work_type'), ('heart_disease', 'avg_glucose_level'), ('heart_disease', 'bmi'), ('heart_disease', 'smoking_status'), ('heart_disease', 'stroke'), ('ever_married', 'age'), ('ever_married', 'hypertension'), ('ever_married', 'heart_disease'), ('ever_married', 'work_type'), ('ever_married', 'avg_glucose_level'), ('ever_married', 'bmi'), ('ever_married', 'smoking_status'), ('ever_married', 'stroke'), ('work_type', 'gender'), ('work_type', 'age'), ('work_type', 'hypertension'), ('work_type', 'heart_disease'), ('work_type', 'ever_married'), ('work_type', 'avg_glucose_level'), ('work_type', 'bmi'), ('work_type', 'smoking_status'), ('work_type', 'stroke'), ('avg_glucose_level', 'gender'), ('avg_glucose_level', 'age'), ('avg_glucose_level', 'hypertension'), ('avg_glucose_level', 'heart_disease'), ('avg_glucose_level', 'ever_married'), ('avg_glucose_level', 'work_type'), ('avg_glucose_level', 'bmi'), ('avg_glucose_level', 'smoking_status'), ('avg_glucose_level', 'stroke'), ('bmi', 'gender'), ('bmi', 'age'), ('bmi', 'hypertension'), ('bmi', 'heart_disease'), ('bmi', 'ever_married'), ('bmi', 'work_type'), ('bmi', 'avg_glucose_level'), ('bmi', 'smoking_status'), ('bmi', 'stroke'), ('smoking_status', 'gender'), ('smoking_status', 'age'), ('smoking_status', 'hypertension'), ('smoking_status', 'heart_disease'), ('smoking_status', 'ever_married'), ('smoking_status', 'work_type'), ('smoking_status', 'avg_glucose_level'), ('smoking_status', 'bmi'), ('smoking_status', 'stroke')]
#G2=[('age', 'cp'), ('age', 'trestbps'), ('age', 'chol'), ('age', 'fbs'), ('age', 'restecg'), ('age', 'thalach'), ('age', 'oldpeak'), ('age', 'slope'), ('age', 'ca'), ('age', 'thal'), ('age', 'target'), ('sex', 'cp'), ('sex', 'chol'), ('sex', 'restecg'), ('sex', 'thalach'), ('sex', 'exang'), ('sex', 'ca'), ('sex', 'thal'), ('sex', 'target'), ('cp', 'age'), ('cp', 'sex'), ('cp', 'trestbps'), ('cp', 'fbs'), ('cp', 'restecg'), ('cp', 'thalach'), ('cp', 'exang'), ('cp', 'oldpeak'), ('cp', 'slope'), ('cp', 'ca'), ('cp', 'thal'), ('cp', 'target'), ('trestbps', 'age'), ('trestbps', 'cp'), ('trestbps', 'chol'), ('trestbps', 'fbs'), ('trestbps', 'restecg'), ('trestbps', 'thalach'), ('trestbps', 'exang'), ('trestbps', 'oldpeak'), ('trestbps', 'slope'), ('trestbps', 'ca'), ('trestbps', 'thal'), ('trestbps', 'target'), ('chol', 'age'), ('chol', 'sex'), ('chol', 'trestbps'), ('chol', 'restecg'), ('fbs', 'age'), ('fbs', 'cp'), ('fbs', 'trestbps'), ('fbs', 'slope'), ('fbs', 'thal'), ('restecg', 'age'), ('restecg', 'sex'), ('restecg', 'cp'), ('restecg', 'trestbps'), ('restecg', 'chol'), ('restecg', 'thalach'), ('restecg', 'exang'), ('restecg', 'oldpeak'), ('restecg', 'slope'), ('restecg', 'ca'), ('restecg', 'target'), ('thalach', 'age'), ('thalach', 'sex'), ('thalach', 'cp'), ('thalach', 'trestbps'), ('thalach', 'restecg'), ('thalach', 'exang'), ('thalach', 'oldpeak'), ('thalach', 'slope'), ('thalach', 'ca'), ('thalach', 'thal'), ('thalach', 'target'), ('exang', 'sex'), ('exang', 'cp'), ('exang', 'trestbps'), ('exang', 'restecg'), ('exang', 'thalach'), ('exang', 'oldpeak'), ('exang', 'slope'), ('exang', 'ca'), ('exang', 'thal'), ('exang', 'target'), ('oldpeak', 'age'), ('oldpeak', 'cp'), ('oldpeak', 'trestbps'), ('oldpeak', 'restecg'), ('oldpeak', 'thalach'), ('oldpeak', 'exang'), ('oldpeak', 'slope'), ('oldpeak', 'ca'), ('oldpeak', 'thal'), ('oldpeak', 'target'), ('slope', 'age'), ('slope', 'cp'), ('slope', 'trestbps'), ('slope', 'fbs'), ('slope', 'restecg'), ('slope', 'thalach'), ('slope', 'exang'), ('slope', 'oldpeak'), ('slope', 'ca'), ('slope', 'thal'), ('slope', 'target'), ('ca', 'age'), ('ca', 'sex'), ('ca', 'cp'), ('ca', 'trestbps'), ('ca', 'restecg'), ('ca', 'thalach'), ('ca', 'exang'), ('ca', 'oldpeak'), ('ca', 'slope'), ('ca', 'thal'), ('ca', 'target'), ('thal', 'age'), ('thal', 'sex'), ('thal', 'cp'), ('thal', 'trestbps'), ('thal', 'fbs'), ('thal', 'thalach'), ('thal', 'exang'), ('thal', 'oldpeak'), ('thal', 'slope'), ('thal', 'ca'), ('thal', 'target'), ('target', 'age'), ('target', 'sex'), ('target', 'cp'), ('target', 'trestbps'), ('target', 'restecg'), ('target', 'thalach'), ('target', 'exang'), ('target', 'oldpeak'), ('target', 'slope'), ('target', 'ca'), ('target', 'thal')]

has_cycles(G1)
#has_cycles(G2)

